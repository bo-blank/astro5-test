---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

const CATEGORIES = {
  'essay': 'Essay',
  'article': 'Article',
  'review': 'Review',
  'interview': 'Interview',
  'photo-essay': 'Photo Essay',
};

export async function getStaticPaths() {
  const allPosts = await getCollection('posts', ({ data }) => !data.draft);

  return [
    {
      params: { category: 'essay' },
      props: { posts: allPosts.filter(p => p.data.category === 'Essay'), categoryName: 'Essay' }
    },
    {
      params: { category: 'article' },
      props: { posts: allPosts.filter(p => p.data.category === 'Article'), categoryName: 'Article' }
    },
    {
      params: { category: 'review' },
      props: { posts: allPosts.filter(p => p.data.category === 'Review'), categoryName: 'Review' }
    },
    {
      params: { category: 'interview' },
      props: { posts: allPosts.filter(p => p.data.category === 'Interview'), categoryName: 'Interview' }
    },
    {
      params: { category: 'photo-essay' },
      props: { posts: allPosts.filter(p => p.data.category === 'Photo Essay'), categoryName: 'Photo Essay' }
    },
  ];
}

interface Props {
  posts: any[];
  categoryName: string;
}

const { posts, categoryName } = Astro.props;
const sortedPosts = posts.sort((a: any, b: any) => b.data.pubDate.getTime() - a.data.pubDate.getTime());
---

<BaseLayout pageTitle={categoryName}>
  <div class="category-container">
    <div class="category-header">
      <h2 class="category-title">{categoryName}</h2>
      <p class="category-info">{posts.length} article{posts.length !== 1 ? 's' : ''}</p>
    </div>

    {sortedPosts.length === 0 ? (
      <p class="no-posts">No articles in this category yet.</p>
    ) : (
      <ul class="posts-list">
        {sortedPosts.map((post: any) => (
          <li class="post-item">
            <article>
              <time datetime={post.data.pubDate.toISOString()} class="post-date">
                {post.data.pubDate.toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric' })}
              </time>
              <h3>
                <a href={`/posts/${post.slug}`}>{post.data.title}</a>
              </h3>
              <p class="post-description">{post.data.description}</p>
              <div class="post-tags">
                {post.data.tags.map((tag: string) => (
                  <a href={`/tags/${tag}`} class="tag">{tag}</a>
                ))}
              </div>
              <a href={`/posts/${post.slug}`} class="read-more">Read more â†’</a>
            </article>
          </li>
        ))}
      </ul>
    )}
  </div>
</BaseLayout>

<style>
  .category-container {
    max-width: 65ch;
    margin: 2rem auto;
    padding: 0 1rem;
  }

  .category-header {
    margin-bottom: 2.5rem;
    padding-bottom: 1.5rem;
    border-bottom: 2px solid var(--color-border);
  }

  .category-title {
    font-size: 2.25rem;
    margin: 0 0 0.5rem 0;
    color: var(--color-fg);
    font-weight: 700;
  }

  .category-info {
    color: var(--color-muted);
    font-size: 0.95rem;
    margin: 0;
  }

  .posts-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .post-item {
    margin-bottom: 3rem;
    padding-bottom: 2rem;
    border-bottom: 1px solid var(--color-border);
  }

  .post-item:last-child {
    border-bottom: none;
  }

  .post-date {
    display: inline-block;
    font-size: 0.85rem;
    color: var(--color-muted);
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    margin-bottom: 0.75rem;
  }

  .post-item h3 {
    margin: 0.75rem 0 0.5rem 0;
    font-size: 1.75rem;
    line-height: 1.3;
  }

  .post-item h3 a {
    color: var(--color-fg);
    text-decoration: none;
    transition: color 0.2s;
  }

  .post-item h3 a:hover {
    color: var(--color-primary-600);
  }

  .post-description {
    color: var(--color-muted);
    margin: 0.75rem 0;
    line-height: 1.6;
    font-size: 1rem;
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    margin: 1rem 0;
  }

  .tag {
    display: inline-block;
    padding: 0.35rem 0.75rem;
    background-color: var(--color-neutral-100);
    color: var(--color-primary-600);
    border: 1px solid var(--color-border);
    border-radius: 0.25rem;
    text-decoration: none;
    font-size: 0.85rem;
    transition: all 0.2s;
  }

  [data-theme='dark'] .tag {
    background-color: var(--color-neutral-800);
  }

  .tag:hover {
    background-color: var(--color-primary-50);
    border-color: var(--color-primary-500);
  }

  [data-theme='dark'] .tag:hover {
    background-color: var(--color-neutral-700);
  }

  .read-more {
    display: inline-block;
    color: var(--color-primary-600);
    text-decoration: none;
    font-weight: 500;
    margin-top: 0.75rem;
    transition: color 0.2s;
  }

  .read-more:hover {
    color: var(--color-primary-900);
  }

  .no-posts {
    text-align: center;
    color: var(--color-muted);
    padding: 2rem 0;
  }

  @media (max-width: 636px) {
    .category-container {
      margin: 1rem 0;
    }

    .category-title {
      font-size: 1.75rem;
    }

    .post-item h3 {
      font-size: 1.35rem;
    }
  }
</style>
