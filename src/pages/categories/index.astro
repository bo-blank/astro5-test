---
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';

const allPosts = await getCollection('posts', ({ data }) => !data.draft);

// Get unique categories
const categories = [
  'Essay',
  'Article',
  'Review',
  'Interview',
  'Photo Essay'
];

// Count posts per category
const categoryStats = categories.map(category => ({
  name: category,
  count: allPosts.filter(post => post.data.category === category).length,
}));

const pageTitle = "Categories";
---

<BaseLayout pageTitle={pageTitle}>
  <div class="categories-container">
    <p class="intro-text">Explore articles by content type</p>
    <div class="categories-grid">
      {categoryStats.map((cat) => (
        <a href={`/categories/${cat.name.toLowerCase().replace(' ', '-')}`} class="category-card">
          <h3 class="category-title">{cat.name}</h3>
          <p class="category-count">{cat.count} article{cat.count !== 1 ? 's' : ''}</p>
          <span class="arrow">â†’</span>
        </a>
      ))}
    </div>
  </div>
</BaseLayout>

<style>
  .categories-container {
    max-width: 65ch;
    margin: 2rem auto;
    padding: 0 1rem;
  }

  .intro-text {
    color: var(--color-muted);
    margin-bottom: 2rem;
    font-size: 1.05rem;
  }

  .categories-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 1.5rem;
  }

  .category-card {
    display: flex;
    flex-direction: column;
    padding: 2rem;
    background-color: var(--color-neutral-50);
    border: 2px solid transparent;
    border-radius: 0.75rem;
    text-decoration: none;
    color: var(--color-fg);
    transition: all 0.3s ease;
    position: relative;
    overflow: hidden;
  }

  [data-theme='dark'] .category-card {
    background-color: var(--color-neutral-800);
  }

  .category-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.1), transparent);
    transition: left 0.5s ease;
  }

  .category-card:hover {
    border-color: var(--color-primary-500);
    background-color: var(--color-primary-50);
    transform: translateY(-4px);
  }

  [data-theme='dark'] .category-card:hover {
    background-color: var(--color-neutral-700);
  }

  .category-card:hover::before {
    left: 100%;
  }

  .category-title {
    margin: 0 0 0.5rem 0;
    font-size: 1.5rem;
    font-weight: 700;
    color: var(--color-fg);
  }

  .category-count {
    color: var(--color-muted);
    margin: 0;
    font-size: 0.95rem;
    flex-grow: 1;
  }

  .arrow {
    font-size: 1.5rem;
    color: var(--color-primary-600);
    transition: transform 0.2s ease;
  }

  .category-card:hover .arrow {
    transform: translateX(4px);
  }

  @media (max-width: 636px) {
    .categories-container {
      margin: 1rem 0;
    }

    .categories-grid {
      grid-template-columns: 1fr;
    }

    .category-card {
      padding: 1.5rem;
    }
  }
</style>
